{"ast":null,"code":"var _jsxFileName = \"/Users/vodenizeko/Desktop/Canary_Webiste_SasS/canary/src/components/reusables/NavBarSearch.js\";\nimport React from \"react\";\nimport { fade, ThemeProvider, withStyles, makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { green } from \"@material-ui/core/colors\";\nconst CssTextField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"green\"\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"red\"\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"yellow\"\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\"\n      }\n    }\n  }\n})(TextField);\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.common.white,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    width: \"auto\",\n    padding: \"10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\"-apple-system\", \"BlinkMacSystemFont\", '\"Segoe UI\"', \"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n    \"&:focus\": {\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main\n    }\n  }\n}))(InputBase);\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n  return /*#__PURE__*/React.createElement(TextField, Object.assign({\n    InputProps: {\n      classes,\n      disableUnderline: true\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\nconst ValidationTextField = withStyles({\n  root: {\n    \"& input:valid + fieldset\": {\n      borderColor: \"green\",\n      borderWidth: 2\n    },\n    \"& input:invalid + fieldset\": {\n      borderColor: \"red\",\n      borderWidth: 2\n    },\n    \"& input:valid:focus + fieldset\": {\n      borderLeftWidth: 6,\n      padding: \"4px !important\" // override inline-style\n\n    }\n  }\n})(TextField);\nconst theme = createMuiTheme({\n  palette: {\n    primary: green\n  }\n});\nexport default function NavBarSearch() {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssTextField, {\n    className: classes.margin,\n    id: \"custom-css-standard-input\",\n    label: \"Custom CSS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/vodenizeko/Desktop/Canary_Webiste_SasS/canary/src/components/reusables/NavBarSearch.js"],"names":["React","fade","ThemeProvider","withStyles","makeStyles","createMuiTheme","InputBase","InputLabel","TextField","FormControl","green","CssTextField","root","color","borderBottomColor","borderColor","BootstrapInput","theme","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","width","padding","transition","transitions","create","fontFamily","join","boxShadow","primary","main","useStylesReddit","overflow","focused","RedditTextField","props","classes","disableUnderline","useStyles","display","flexWrap","margin","ValidationTextField","borderWidth","borderLeftWidth","NavBarSearch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  fade,\n  ThemeProvider,\n  withStyles,\n  makeStyles,\n  createMuiTheme\n} from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst CssTextField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"green\"\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"red\"\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"yellow\"\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\"\n      }\n    }\n  }\n})(TextField);\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.common.white,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    width: \"auto\",\n    padding: \"10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:focus\": {\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main\n    }\n  }\n}))(InputBase);\n\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return (\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst ValidationTextField = withStyles({\n  root: {\n    \"& input:valid + fieldset\": {\n      borderColor: \"green\",\n      borderWidth: 2\n    },\n    \"& input:invalid + fieldset\": {\n      borderColor: \"red\",\n      borderWidth: 2\n    },\n    \"& input:valid:focus + fieldset\": {\n      borderLeftWidth: 6,\n      padding: \"4px !important\" // override inline-style\n    }\n  }\n})(TextField);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green\n  }\n});\n\nexport default function NavBarSearch() {\n  const classes = useStyles();\n\n  return (\n    <form className={classes.root} noValidate>\n      <CssTextField\n        className={classes.margin}\n        id=\"custom-css-standard-input\"\n        label=\"Custom CSS\"\n      />\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}